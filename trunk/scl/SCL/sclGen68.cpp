#include "sclGen68.h"

//============================================================================
//  Constructor
//============================================================================
scl68Gen::scl68Gen()
{

}
//============================================================================
//  Deconstructor
//============================================================================
scl68Gen::~scl68Gen()
{

}
//============================================================================
//  Generate Code File
//============================================================================
void scl68Gen::Generate(FILE* _file,			// *OUT* Spit out Code
						sclSymTable* _SymTab,	// *IN* Used for Symbols
						sclAbSynTree* _AST)		// *IN* Abstract Symbol Table
{
	/*----------------------------------
		 Save Varibles
	 ----------------------------------*/
	m_AST = _AST;
	m_SymTab = _SymTab;
	m_cFile = _file;

	/*----------------------------------
		 Generate Code
	 ----------------------------------*/
	GenCode();
	GenFuncLib();
	GenData();
}
//============================================================================
//  Generate Code Block
//============================================================================
void scl68Gen::GenCode()
{
	sclLexTok* _token = m_AST->PopPolish();
	while(_token == 0)
	{
		/*----------------------------------
			Print Code
		 ----------------------------------*/
		_token = m_AST->PopPolish();	// Get Next Token
	}
}
//============================================================================
//  Generate Function Library
//============================================================================
void scl68Gen::GenFuncLib()
{

}
//============================================================================
//  Generate Data
//============================================================================
void scl68Gen::GenData()
{

}