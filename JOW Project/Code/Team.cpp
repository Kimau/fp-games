#include "Team.h"

//#######################################################################################
//#######################################################################################
//			Init Phase
//#######################################################################################
//#######################################################################################
//=====================================================================
//	Construct Team
//=====================================================================
JWL_Team::JWL_Team()
{
	m_MaxAP = 0;
	m_UsedAP = 0;
}
//=====================================================================
// Deconstruct Team
//=====================================================================
JWL_Team::~JWL_Team()
{
}
//#######################################################################################
//#######################################################################################
//			Unit Management
//#######################################################################################
//#######################################################################################
//=====================================================================
//		Add Unit to List
//=====================================================================
void JWL_Team::addUnit(JWL_Unit* _unit)
{
	// TODO :: Change Controlling Team
	m_units.addUnit(_unit);
}
//=====================================================================
//		Remove Unit from List 
//=====================================================================
bool JWL_Team::remUnit(JWL_Unit* _unit)
{
	// TODO :: Change Controlling Team
	return m_units.remUnit(_unit);
}
//=====================================================================
//		Select Unit on List
//=====================================================================
bool JWL_Team::selUnit(JWL_Unit* _unit)
{
	return m_units.selUnit(_unit);
}